{"version":3,"sources":["components/Header/Header.tsx","components/Thumbnail/Thumbnail.tsx","components/PostInfo/PostInfo.tsx","components/RangeSlider/RangeSlider.tsx","App.tsx","util/index.ts","index.tsx"],"names":["Header","children","id","href","Thumbnail","thumbnail","className","src","alt","React","memo","PostInfo","data","useState","posts","setPosts","display","setDisplay","loading","setLoading","handleLazy","window","innerHeight","pageYOffset","document","documentElement","offsetHeight","useEffect","slice","body","clientHeight","length","addEventListener","removeEventListener","newPosts","map","post","index","owner","picture","firstName","lastName","image","likes","Date","publishDate","toLocaleDateString","tags","text","style","textAlign","onClick","scrollTo","Range","slider","setSlider","show","setShow","onBlur","type","name","min","max","value","onInput","e","Number","target","left","App","setData","query","setQuery","setLikes","searchParams","setSearchParams","url","header","fetch","method","headers","then","response","ok","json","catch","error","console","placeholder","join","onChange","filter","checked","includes","check","prev","param","filterByLikes","hasWord","toLowerCase","indexOf","every","trim","Array","isArray","some","tag","handleSearch","ReactDOM","render","StrictMode","getElementById"],"mappings":"2RAMe,SAASA,EAAT,GAA0C,IAAxBC,EAAuB,EAAvBA,SAC/B,OACE,yBAAQC,GAAG,mBAAX,UACE,mBAAGC,KAAK,KAAR,2BACCF,K,YCPP,SAASG,EAAT,GAA0D,IAArCC,EAAoC,EAApCA,UACnB,OACE,qBAAKC,UAAU,YAAf,SACE,qBAAKC,IAAKF,EAAWG,IAAI,gBAKhBC,UAAMC,KAAKN,GCNX,SAASO,EAAT,GAA6B,IAATC,EAAQ,EAARA,KAAQ,EACfC,mBAAkB,IADH,mBAClCC,EADkC,KAC3BC,EAD2B,OAEXF,mBAAS,SAFE,mBAElCG,EAFkC,KAEzBC,EAFyB,OAGXJ,oBAAS,GAHE,mBAGlCK,EAHkC,KAGzBC,EAHyB,KA2BzC,SAASC,IAELC,OAAOC,YAAcD,OAAOE,YAAc,IAC1CC,SAASC,gBAAgBC,cAEzBP,GAAW,GAIf,OA9BAQ,qBAAU,WACRZ,EAASH,EAAKgB,MAAM,EAAG,OACtB,CAAChB,IAEJe,qBAAU,WAOR,OANAH,SAASK,KAAKC,aAAeT,OAAOC,YAChCL,EAAW,QACXA,EAAW,SACXH,EAAMiB,OAAS,IACjBV,OAAOW,iBAAiB,SAAUZ,GAE7B,kBAAMC,OAAOY,oBAAoB,SAAUb,MACjD,CAACN,EAAMiB,SAEVJ,qBAAU,WACR,GAAKT,EAAL,CACA,IAAMgB,EAAQ,sBAAOpB,GAAP,YAAiBF,EAAKgB,MAAMd,EAAMiB,OAAQ,GAAKjB,EAAMiB,UACnEhB,EAASmB,GACTf,GAAW,MACV,CAACD,EAASN,EAAME,IAWdA,EAAMiB,OAIT,qCACE,qBAAKzB,UAAU,iBAAf,SACGQ,EAAMqB,KAAI,SAACC,EAAaC,GAAd,OACT,sBAAK/B,UAAU,iBAAf,UACE,sBAAKA,UAAU,QAAf,UACE,cAAC,EAAD,CAAWD,UAAW+B,EAAKE,MAAMC,UACjC,+BACGH,EAAKE,MAAME,UADd,IAC0BJ,EAAKE,MAAMG,eAIvC,qBAAKnC,UAAU,aAAaC,IAAK6B,EAAKM,MAAOlC,IAAI,SAEjD,sBAAKF,UAAU,YAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,iCACE,mBAAGA,UAAU,gBADf,IACmC8B,EAAKO,SAExC,iDACgB,IACb,IAAIC,KAAKR,EAAKS,aAAaC,2BAI/BV,EAAKW,KAAKhB,OAAS,GAClB,qBAAKzB,UAAU,SAAf,SACG8B,EAAKW,KAAKZ,KAAI,SAACY,EAAMV,GAAP,OACb,4BAAgBU,GAARV,QAKd,4BAAID,EAAKY,YA7BwBZ,EAAKlC,SAmC9C,qBAAK+C,MAAO,CAAEjC,UAASkC,UAAW,UAAlC,SACE,wBAAQC,QAAS,kBAAM9B,OAAO+B,SAAS,EAAG,IAAI9C,UAAU,MAAxD,SACE,mBAAGA,UAAU,8BA3CZ,oBAAI2C,MAAO,CAAEC,UAAW,UAAxB,2B,MClCI,SAASG,EAAT,GAAkD,IAAjCC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,UAAwB,EACtC1C,mBAAS,IAD6B,mBACvD2C,EADuD,KACjDC,EADiD,KAQ9D,OACE,sBAAKnD,UAAU,aAAf,UACE,uBACEA,UAAU,QACVoD,OAAQ,kBAAMD,EAAQ,KACtBE,KAAK,QACLC,KAAK,QACLC,IAAI,IACJC,IAAI,OACJC,MAAOT,EACPU,QAfN,SAAqBC,GACnBV,EAAUW,OAAOD,EAAEE,OAAOJ,QAC1BN,EAAQ,WAeN,yBAAQnD,UAAS,iBAAYkD,GAAQP,MAAO,CAAEmB,KAAMd,EAAS,GAAK,KAAlE,UACGA,EADH,IACW,mBAAGhD,UAAU,sBCrBf,SAAS+D,IACtB,IAD4B,EAGJxD,mBAAkB,IAHd,mBAGrBD,EAHqB,KAGf0D,EAHe,OAIFzD,mBAAS,IAJP,mBAIrB0D,EAJqB,KAIdC,EAJc,OAMF3D,mBAAS,GANP,mBAMrB8B,EANqB,KAMd8B,EANc,OAOY5D,mBAAS,CAAC,UAPtB,mBAOrB6D,EAPqB,KAOPC,EAPO,KAqD5B,OA5CAhD,qBAAU,WCjBL,IAAmBiD,EAAaC,GAAbD,EDSZ,4CCTyBC,EDUtB,2BCTRC,MAAMF,EAAK,CAChBG,OAAQ,MACRC,QAAS,CAAE,SAAUH,KAEpBI,MAAK,SAAAC,GACJ,GAAIA,EAASC,GAAI,OAAOD,EAASE,OACjC,MAAMF,KAEPG,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,cAAeA,ODStBL,MAAK,SAAArE,GAC1B0D,EAAQ1D,EAAKA,WAEd,IAyCD,gCACE,cAAC,EAAD,UACE,sBAAKN,UAAU,UAAf,UACE,uBACEA,UAAU,YACVqD,KAAK,SACLI,MAAOQ,EACPiB,YAAW,oBAAed,EAAae,KAAK,MAAjC,KACXC,SAAU,SAAAzB,GAAC,OAAIO,EAASP,EAAEE,OAAOJ,UAEnC,sBAAKzD,UAAU,WAAf,UACE,cAAC+C,EAAD,CAAaC,OAAQX,EAAOY,UAAWkB,IA5DjC,CAAC,QAAS,OAAQ,QA8DftC,KAAI,SAAAwD,GAAM,OACjB,kCACE,uBACEhC,KAAK,WACLiC,QAASlB,EAAamB,SAASF,GAC/BD,SAAU,WACR,IAAMI,EAAQpB,EAAamB,SAASF,GACpChB,GAAgB,SAAAoB,GAAI,OAClBD,EACIC,EAAKJ,QAAO,SAAAK,GAAK,OAAIA,IAAUL,KAD9B,sBAEGI,GAFH,CAESJ,UAInBA,IAbSA,cAoBpB,cAAC,EAAD,CAAU/E,KAzEd,SAAsBoC,GAEpB,IAAKA,IAASL,EAAO,OAAO/B,EAC5B,IAAMqF,EAAgBrF,EAAK+E,QAAO,SAAAvD,GAChC,OAAOA,EAAKO,OAASA,KAIvB,IAAKK,EAAM,OAAOiD,EAGlB,SAASC,EAAQ/B,EAAgBI,GAC/B,OAAOJ,EAAOgC,cAAcC,QAAQ7B,EAAM4B,gBAAkB,EAI9D,OAAOF,EAAcN,QAAO,SAACvD,GAAD,OAE1BsC,EAAa2B,OAAM,SAAAL,GAEjB,MAA2B,kBAAhB5D,EAAK4D,GACPE,EAAQ9D,EAAK4D,GAAQhD,EAAKsD,QAE/BC,MAAMC,QAAQpE,EAAK4D,IACd5D,EAAK4D,GAAOS,MAAK,SAAAC,GAAG,OAAIR,EAAQQ,EAAK1D,EAAKsD,WAGrC,UAAVN,GACKE,EAAQ,GAAD,OACT9D,EAAKE,MAAME,UADF,YACeJ,EAAKE,MAAMG,UACtCO,EAAKsD,cA2CKK,CAAapC,QE5FnCqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtF,SAASuF,eAAe,W","file":"static/js/main.30e46937.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\ninterface PropTypes {\r\n  children: React.ReactNode;\r\n}\r\nexport default function Header({ children }: PropTypes) {\r\n  return (\r\n    <header id=\"header-component\">\r\n      <a href=\"#0\">Link to Learn</a>\r\n      {children}\r\n    </header>\r\n  );\r\n}\r\n","import \"./Thumbnail.css\";\r\nimport React from \"react\";\r\n\r\nfunction Thumbnail({ thumbnail }: { thumbnail: string }) {\r\n  return (\r\n    <div className=\"thumbnail\">\r\n      <img src={thumbnail} alt=\"thumbnail\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Thumbnail);\r\n","import \"./PostInfo.css\";\nimport Thumbnail from \"../Thumbnail/Thumbnail\";\nimport { Posts } from \"../../interface/Posts\";\nimport { useEffect, useState } from \"react\";\n\nexport default function PostInfo({ data }) {\n  const [posts, setPosts] = useState<Posts[]>([]);\n  const [display, setDisplay] = useState(\"block\");\n  const [loading, setLoading] = useState(false);\n\n  // Lazy loading starts here\n  useEffect(() => {\n    setPosts(data.slice(0, 10));\n  }, [data]);\n\n  useEffect(() => {\n    document.body.clientHeight < window.innerHeight\n      ? setDisplay(\"none\")\n      : setDisplay(\"block\");\n    if (posts.length < 50) {\n      window.addEventListener(\"scroll\", handleLazy);\n    }\n    return () => window.removeEventListener(\"scroll\", handleLazy);\n  }, [posts.length]);\n\n  useEffect(() => {\n    if (!loading) return;\n    const newPosts = [...posts, ...data.slice(posts.length, 10 + posts.length)];\n    setPosts(newPosts);\n    setLoading(false);\n  }, [loading, data, posts]);\n\n  function handleLazy() {\n    if (\n      window.innerHeight + window.pageYOffset + 100 <\n      document.documentElement.offsetHeight\n    )\n      setLoading(true);\n  }\n\n  // If no posts exist we display no results.\n  if (!posts.length)\n    return <h2 style={{ textAlign: \"center\" }}>No results...</h2>;\n\n  return (\n    <>\n      <div className=\"grid-container\">\n        {posts.map((post: Posts, index: number) => (\n          <div className=\"flex-container\" key={post.id}>\n            <div className=\"owner\">\n              <Thumbnail thumbnail={post.owner.picture} />\n              <h2>\n                {post.owner.firstName} {post.owner.lastName}\n              </h2>\n            </div>\n\n            <img className=\"post-image\" src={post.image} alt=\"post\" />\n\n            <div className=\"post-info\">\n              <div className=\"image-subtext\">\n                <span>\n                  <i className=\"bx bxs-like\"></i> {post.likes}\n                </span>\n                <span>\n                  Publish Date:{\" \"}\n                  {new Date(post.publishDate).toLocaleDateString()}\n                </span>\n              </div>\n\n              {post.tags.length > 0 && (\n                <div className=\"tagbar\">\n                  {post.tags.map((tags, index) => (\n                    <p key={index}>{tags}</p>\n                  ))}\n                </div>\n              )}\n\n              <p>{post.text}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div style={{ display, textAlign: \"center\" }}>\n        <button onClick={() => window.scrollTo(0, 0)} className=\"top\">\n          <i className=\"bx bxs-chevrons-up\"></i>\n        </button>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\r\nimport \"./RangeSlider.css\";\r\n\r\ninterface PropTypes {\r\n  slider: number;\r\n  setSlider: (arg0) => void;\r\n}\r\n\r\nexport default function Range({ slider, setSlider }: PropTypes) {\r\n  const [show, setShow] = useState(\"\");\r\n\r\n  function handleInput(e: React.ChangeEvent<HTMLInputElement>) {\r\n    setSlider(Number(e.target.value));\r\n    setShow(\"show\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"range-wrap\">\r\n      <input\r\n        className=\"range\"\r\n        onBlur={() => setShow(\"\")}\r\n        type=\"range\"\r\n        name=\"likes\"\r\n        min=\"0\"\r\n        max=\"1000\"\r\n        value={slider}\r\n        onInput={handleInput}\r\n      />\r\n      <output className={`bubble ${show}`} style={{ left: slider / 10 + \"%\" }}>\r\n        {slider} <i className=\"bx bxs-like\"></i>\r\n      </output>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { fetchData } from \"./util\";\nimport { Posts } from \"./interface/Posts\";\nimport Header from \"./components/Header/Header\";\nimport PostInfo from \"./components/PostInfo/PostInfo\";\nimport RangeSlider from \"./components/RangeSlider/RangeSlider\";\n\nexport default function App() {\n  const URL = \"https://dummyapi.io/data/v1/post?limit=50\";\n  const APP_ID = \"614388656e2fec97b56911c0\";\n  const [data, setData] = useState<Posts[]>([]);\n  const [query, setQuery] = useState(\"\");\n  const filters = [\"owner\", \"text\", \"tags\"];\n  const [likes, setLikes] = useState(0);\n  const [searchParams, setSearchParams] = useState([\"owner\"]);\n\n  useEffect(() => {\n    fetchData(URL, APP_ID).then(data => {\n      setData(data.data);\n    });\n  }, []);\n\n  function handleSearch(text?: string) {\n    // Guard clause\n    if (!text && !likes) return data;\n    const filterByLikes = data.filter(post => {\n      return post.likes >= likes;\n    });\n\n    // 2nd Guard Clause because TypeScript is strict\n    if (!text) return filterByLikes;\n\n    // We use this function to see a substring or string exists in target string.\n    function hasWord(target: string, query: string) {\n      return target.toLowerCase().indexOf(query.toLowerCase()) > -1;\n    }\n\n    // Filtering happens here by checking the variable type then filter accordingly\n    return filterByLikes.filter((post: Posts) =>\n      // Depending on what is checked we will search by that parameter\n      searchParams.every(param => {\n        // Search by Text, check if typeof is string\n        if (typeof post[param] === \"string\")\n          return hasWord(post[param], text.trim());\n        // Search by tags, check if we have an array\n        if (Array.isArray(post[param])) {\n          return post[param].some(tag => hasWord(tag, text.trim()));\n        }\n        // Default search by owner, can make this more dynamic\n        if (param === \"owner\") {\n          return hasWord(\n            `${post.owner.firstName} ${post.owner.lastName}`,\n            text.trim()\n          );\n        }\n        return false;\n      })\n    );\n  }\n\n  return (\n    <div>\n      <Header>\n        <div className=\"filters\">\n          <input\n            className=\"searchbar\"\n            type=\"search\"\n            value={query}\n            placeholder={`Search by ${searchParams.join(\", \")}.`}\n            onChange={e => setQuery(e.target.value)}\n          />\n          <div className=\"dropmenu\">\n            <RangeSlider slider={likes} setSlider={setLikes} />\n\n            {filters.map(filter => (\n              <label key={filter}>\n                <input\n                  type=\"checkbox\"\n                  checked={searchParams.includes(filter)}\n                  onChange={() => {\n                    const check = searchParams.includes(filter);\n                    setSearchParams(prev =>\n                      check\n                        ? prev.filter(param => param !== filter)\n                        : [...prev, filter]\n                    );\n                  }}\n                />\n                {filter}\n              </label>\n            ))}\n          </div>\n        </div>\n      </Header>\n\n      <PostInfo data={handleSearch(query)} />\n    </div>\n  );\n}\n","export function fetchData(url: string, header: string) {\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n    headers: { \"app-id\": header },\r\n  })\r\n    .then(response => {\r\n      if (response.ok) return response.json();\r\n      throw response;\r\n    })\r\n    .catch(error => console.error(\"Bad request\", error));\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}