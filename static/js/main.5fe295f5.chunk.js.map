{"version":3,"sources":["components/Navbar/Navbar.tsx","components/RangeSlider/RangeSlider.tsx","components/Dropmenu/Dropmenu.tsx","App.tsx","util/index.ts","index.tsx"],"names":["Navbar","children","id","Range","slider","setSlider","useState","show","setShow","className","htmlFor","name","type","onBlur","min","max","value","onInput","e","Number","target","style","left","React","memo","Dropmenu","label","params","contents","setParams","map","content","checked","includes","onChange","check","prev","filter","param","PostInfo","lazy","App","data","setData","query","setQuery","searchParams","setSearchParams","likes","setLikes","tags","setTags","tagsParam","setTagsParam","owners","setOwners","ownersParam","setOwnersParam","useEffect","url","header","fetch","method","headers","then","response","ok","json","catch","error","console","tag","Set","flat","Infinity","owner","firstName","lastName","onClick","autoFocus","placeholder","join","fallback","textAlign","text","hasWord","toLowerCase","indexOf","length","filterByTags","post","some","filterByLikes","trim","Array","isArray","handleSearch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fe295f5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\ninterface PropTypes {\r\n  children: React.ReactNode;\r\n}\r\nexport default function Navbar({ children }: PropTypes) {\r\n  return <header id=\"header-component\">{children}</header>;\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./RangeSlider.css\";\n\ninterface PropTypes {\n  slider: number;\n  setSlider: (arg0) => void;\n}\n\nfunction Range({ slider, setSlider }: PropTypes) {\n  const [show, setShow] = useState(\"\");\n\n  function handleInput(e: React.ChangeEvent<HTMLInputElement>) {\n    setSlider(Number(e.target.value));\n    setShow(\"show\");\n  }\n\n  return (\n    <div className=\"range-wrap\">\n      <label htmlFor=\"likes\">Likes</label>\n      <input\n        id=\"likes\"\n        name=\"likes\"\n        type=\"range\"\n        className=\"range\"\n        onBlur={() => setShow(\"\")}\n        min=\"0\"\n        max=\"500\"\n        value={slider}\n        onInput={handleInput}\n      />\n      <output className={`bubble ${show}`} style={{ left: slider / 5 + \"%\" }}>\n        {slider}\n      </output>\n    </div>\n  );\n}\n\nexport default React.memo(Range);\n","import React from \"react\";\nimport \"./Dropmenu.css\";\n\ninterface PropTypes {\n  label: string;\n  params: string[];\n  contents: string[];\n  setParams: any;\n}\n\nfunction Dropmenu({ label, params, contents, setParams }: PropTypes) {\n  return (\n    <div className={`dropdown ${label}`}>\n      <button className=\"dropbtn\">{label}</button>\n      <div className=\"dropdown-content\">\n        <div className=\"grid-column\">\n          {contents.map(content => (\n            <label key={content}>\n              <input\n                type=\"checkbox\"\n                checked={params.includes(content)}\n                onChange={() => {\n                  const check = params.includes(content);\n                  setParams(prev =>\n                    check\n                      ? prev.filter(param => param !== content)\n                      : [...prev, content]\n                  );\n                }}\n              />\n              {content}\n            </label>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Dropmenu);\n","import { useEffect, useState, Suspense, lazy } from \"react\";\nimport \"./App.css\";\nimport { fetchData } from \"./util\";\nimport { Posts } from \"./interface/Posts\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport RangeSlider from \"./components/RangeSlider/RangeSlider\";\nimport Dropmenu from \"./components/Dropmenu/Dropmenu\";\nconst PostInfo = lazy(() => import(\"./components/PostInfo/PostInfo\"));\n\nexport default function App() {\n  const URL = \"https://dummyapi.io/data/v1/post?limit=50\";\n  const APP_ID = \"614388656e2fec97b56911c0\";\n  const [data, setData] = useState<Posts[]>([]);\n  const [query, setQuery] = useState(\"\");\n  const filters = [\"owner\", \"text\", \"tags\"];\n  const [searchParams, setSearchParams] = useState([\"owner\", \"text\", \"tags\"]);\n  const [likes, setLikes] = useState(0);\n  const [tags, setTags] = useState([]);\n  const [tagsParam, setTagsParam] = useState<string[]>([]);\n  const [owners, setOwners] = useState([]);\n  const [ownersParam, setOwnersParam] = useState<string[]>([]);\n\n  useEffect(() => {\n    fetchData(URL, APP_ID).then(data => {\n      setData(data.data);\n      let tags = data.data.map(data => data.tags.map(tag => tag));\n      tags = [...new Set(tags.flat(Infinity))];\n      setTags(tags);\n      let owners = data.data.map(\n        data => `${data.owner.firstName} ${data.owner.lastName}`\n      );\n      owners = [...new Set(owners)];\n      setOwners(owners);\n    });\n  }, []);\n\n  function handleSearch(text?: string) {\n    // We use this function to see a substring or string exists in target string.\n    function hasWord(target: string, query: string) {\n      return target.toLowerCase().indexOf(query.toLowerCase()) > -1;\n    }\n\n    // Guard clause to check if any search parameter exists.\n    if (!text && !likes && !tagsParam.length && !ownersParam.length)\n      return data;\n\n    const filterByTags = data.filter(post =>\n      post.tags.some(tag => (tagsParam.length ? tagsParam.includes(tag) : data))\n    );\n\n    const filterByOwner = filterByTags.filter(post => {\n      const owner = `${post.owner.firstName} ${post.owner.lastName}`;\n      return ownersParam.length ? ownersParam.includes(owner) : filterByTags;\n    });\n\n    // 1st filter by likes if likes\n    const filterByLikes = filterByOwner.filter(post => {\n      return post.likes >= likes;\n    });\n\n    // Guard clause for the search\n    if (!text || !searchParams?.length) return filterByLikes;\n\n    // Filtering happens here by checking the variable type then filter accordingly\n    return filterByLikes.filter((post: Posts) =>\n      // Depending on what is checked we will search by that parameter\n      searchParams.some(param => {\n        // Search by Text, check if typeof is string\n        if (typeof post[param] === \"string\")\n          return hasWord(post[param], text.trim());\n        // Search by tags, check if we have an array\n        if (Array.isArray(post[param])) {\n          return post[param].some(tag => hasWord(tag, text.trim()));\n        }\n        // Default search by owner, can make this more dynamic\n        if (param === \"owner\") {\n          return hasWord(\n            `${post.owner.firstName} ${post.owner.lastName}`,\n            text.trim()\n          );\n        }\n        return false;\n      })\n    );\n  }\n\n  function clearAll() {\n    setTagsParam([]);\n    setOwnersParam([]);\n    setQuery(\"\");\n    setLikes(0);\n  }\n\n  return (\n    <div>\n      <Navbar>\n        <div className=\"filters\">\n          <button className=\"clear\" onClick={clearAll}>\n            clear\n          </button>\n          <input\n            autoFocus\n            className=\"searchbar\"\n            type=\"search\"\n            value={query}\n            placeholder={`Search by ${searchParams.join(\", \")}.`}\n            onChange={e => setQuery(e.target.value)}\n          />\n\n          <div className=\"searchmenu\">\n            {filters.map(filter => (\n              <div key={filter}>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={searchParams.includes(filter)}\n                    onChange={() => {\n                      const check = searchParams.includes(filter);\n                      setSearchParams(prev =>\n                        check\n                          ? prev.filter(param => param !== filter)\n                          : [...prev, filter]\n                      );\n                    }}\n                  />\n                  {filter}\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div>\n          <Dropmenu\n            label=\"owners\"\n            params={ownersParam}\n            contents={owners}\n            setParams={setOwnersParam}\n          />\n          <Dropmenu\n            label=\"tags\"\n            params={tagsParam}\n            contents={tags}\n            setParams={setTagsParam}\n          />\n        </div>\n\n        <RangeSlider slider={likes} setSlider={setLikes} />\n      </Navbar>\n\n      <Suspense fallback={<h2 style={{ textAlign: \"center\" }}>Loading...</h2>}>\n        <PostInfo data={handleSearch(query)} />\n      </Suspense>\n    </div>\n  );\n}\n","export function fetchData(url: string, header: string) {\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n    headers: { \"app-id\": header },\r\n  })\r\n    .then(response => {\r\n      if (response.ok) return response.json();\r\n      throw response;\r\n    })\r\n    .catch(error => console.error(\"Bad request\", error));\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}