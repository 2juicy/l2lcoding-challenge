{"version":3,"sources":["components/Navbar/Navbar.tsx","components/Thumbnail/Thumbnail.tsx","components/PostInfo/PostInfo.tsx","components/RangeSlider/RangeSlider.tsx","components/Dropmenu/Dropmenu.tsx","App.tsx","util/index.ts","index.tsx"],"names":["Navbar","children","id","Thumbnail","thumbnail","className","src","alt","React","memo","PostInfo","data","useState","posts","setPosts","display","setDisplay","loading","setLoading","handleLazy","window","innerHeight","pageYOffset","document","documentElement","offsetHeight","useEffect","slice","body","clientHeight","length","addEventListener","removeEventListener","newPosts","map","post","index","owner","picture","firstName","lastName","image","likes","Date","publishDate","toLocaleDateString","tags","text","style","textAlign","onClick","scrollTo","Range","slider","setSlider","show","setShow","onBlur","type","name","min","max","value","onInput","e","Number","target","left","Dropmenu","label","params","contents","setParams","content","checked","includes","onChange","check","prev","filter","param","App","setData","query","setQuery","setLikes","searchParams","setSearchParams","setTags","tagsParam","setTagsParam","owners","setOwners","ownersParam","setOwnersParam","url","header","fetch","method","headers","then","response","ok","json","catch","error","console","log","tag","Set","flat","Infinity","placeholder","join","hasWord","toLowerCase","indexOf","filterByTags","some","filterByLikes","trim","Array","isArray","handleSearch","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0edf22a2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\ninterface PropTypes {\r\n  children: React.ReactNode;\r\n}\r\nexport default function Navbar({ children }: PropTypes) {\r\n  return <header id=\"header-component\">{children}</header>;\r\n}\r\n","import \"./Thumbnail.css\";\r\nimport React from \"react\";\r\n\r\nfunction Thumbnail({ thumbnail }: { thumbnail: string }) {\r\n  return (\r\n    <div className=\"thumbnail\">\r\n      <img src={thumbnail} alt=\"thumbnail\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Thumbnail);\r\n","import \"./PostInfo.css\";\nimport Thumbnail from \"../Thumbnail/Thumbnail\";\nimport { Posts } from \"../../interface/Posts\";\nimport { useEffect, useState } from \"react\";\n\nexport default function PostInfo({ data }) {\n  const [posts, setPosts] = useState<Posts[]>([]);\n  const [display, setDisplay] = useState(\"block\");\n  const [loading, setLoading] = useState(false);\n\n  // Lazy loading starts here\n  useEffect(() => {\n    setPosts(data.slice(0, 10));\n  }, [data]);\n\n  useEffect(() => {\n    document.body.clientHeight - 50 < window.innerHeight\n      ? setDisplay(\"none\")\n      : setDisplay(\"block\");\n    if (posts.length < 50) {\n      window.addEventListener(\"scroll\", handleLazy);\n    }\n    return () => window.removeEventListener(\"scroll\", handleLazy);\n  }, [posts.length]);\n\n  useEffect(() => {\n    if (!loading) return;\n    const newPosts = [...posts, ...data.slice(posts.length, 10 + posts.length)];\n    setPosts(newPosts);\n    setLoading(false);\n  }, [loading, data, posts]);\n\n  function handleLazy() {\n    if (\n      window.innerHeight + window.pageYOffset + 100 <\n      document.documentElement.offsetHeight\n    )\n      setLoading(true);\n  }\n\n  // If no posts exist we display no results.\n  if (!posts.length)\n    return <h2 style={{ textAlign: \"center\" }}>No results...</h2>;\n\n  return (\n    <>\n      <div className=\"grid-container\">\n        {posts.map((post: Posts, index: number) => (\n          <div className=\"flex-container\" key={post.id}>\n            <div className=\"owner\">\n              <Thumbnail thumbnail={post.owner.picture} />\n              <h2>\n                {post.owner.firstName} {post.owner.lastName}\n              </h2>\n            </div>\n\n            <img className=\"post-image\" src={post.image} alt=\"post\" />\n\n            <div className=\"post-info\">\n              <div className=\"image-subtext\">\n                <span>\n                  <i className=\"bx bxs-like\"></i> {post.likes}\n                </span>\n                <span>\n                  Publish Date:{\" \"}\n                  {new Date(post.publishDate).toLocaleDateString()}\n                </span>\n              </div>\n\n              {post.tags.length > 0 && (\n                <div className=\"tagbar\">\n                  {post.tags.map((tags, index) => (\n                    <p key={index}>{tags}</p>\n                  ))}\n                </div>\n              )}\n\n              <p>{post.text}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div style={{ display, textAlign: \"center\" }}>\n        <button onClick={() => window.scrollTo(0, 0)} className=\"top\">\n          <i className=\"bx bxs-chevrons-up\"></i>\n        </button>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\r\nimport \"./RangeSlider.css\";\r\n\r\ninterface PropTypes {\r\n  slider: number;\r\n  setSlider: (arg0) => void;\r\n}\r\n\r\nexport default function Range({ slider, setSlider }: PropTypes) {\r\n  const [show, setShow] = useState(\"\");\r\n\r\n  function handleInput(e: React.ChangeEvent<HTMLInputElement>) {\r\n    setSlider(Number(e.target.value));\r\n    setShow(\"show\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"range-wrap\">\r\n      Likes\r\n      <input\r\n        className=\"range\"\r\n        onBlur={() => setShow(\"\")}\r\n        type=\"range\"\r\n        name=\"likes\"\r\n        min=\"0\"\r\n        max=\"1000\"\r\n        value={slider}\r\n        onInput={handleInput}\r\n      />\r\n      <output className={`bubble ${show}`} style={{ left: slider / 10 + \"%\" }}>\r\n        {slider} <i className=\"bx bxs-like\"></i>\r\n      </output>\r\n    </div>\r\n  );\r\n}\r\n","import \"./Dropmenu.css\";\r\n\r\ninterface PropTypes {\r\n  label: string;\r\n  params: string[];\r\n  contents: string[];\r\n  setParams: any;\r\n}\r\n\r\nexport default function Dropmenu({\r\n  label,\r\n  params,\r\n  contents,\r\n  setParams,\r\n}: PropTypes) {\r\n  return (\r\n    <div className={`dropdown ${label}`}>\r\n      <button className=\"dropbtn\">{label}</button>\r\n      <div className=\"dropdown-content\">\r\n        <div className=\"grid-column\">\r\n          {contents.map(content => (\r\n            <label key={content}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={params.includes(content)}\r\n                onChange={() => {\r\n                  const check = params.includes(content);\r\n                  setParams(prev =>\r\n                    check\r\n                      ? prev.filter(param => param !== content)\r\n                      : [...prev, content]\r\n                  );\r\n                }}\r\n              />\r\n              {content}\r\n            </label>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { fetchData } from \"./util\";\r\nimport { Posts } from \"./interface/Posts\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport PostInfo from \"./components/PostInfo/PostInfo\";\r\nimport RangeSlider from \"./components/RangeSlider/RangeSlider\";\r\nimport Dropmenu from \"./components/Dropmenu/Dropmenu\";\r\n\r\nexport default function App() {\r\n  const URL = \"https://dummyapi.io/data/v1/post?limit=50\";\r\n  const APP_ID = \"614388656e2fec97b56911c0\";\r\n  const [data, setData] = useState<Posts[]>([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const filters = [\"owner\", \"text\", \"tags\"];\r\n  const [likes, setLikes] = useState(0);\r\n  const [searchParams, setSearchParams] = useState([\"owner\", \"text\", \"tags\"]);\r\n  const [tags, setTags] = useState([]);\r\n  const [tagsParam, setTagsParam] = useState<string[]>([]);\r\n  const [owners, setOwners] = useState([]);\r\n  const [ownersParam, setOwnersParam] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetchData(URL, APP_ID).then(data => {\r\n      console.log(data.data);\r\n      setData(data.data);\r\n      let tags = data.data.map(data => data.tags.map(tag => tag));\r\n      tags = [...new Set(tags.flat(Infinity))];\r\n      setTags(tags);\r\n      let owners = data.data.map(\r\n        data => `${data.owner.firstName} ${data.owner.lastName}`\r\n      );\r\n      owners = [...new Set(owners)];\r\n      setOwners(owners);\r\n    });\r\n  }, []);\r\n\r\n  function handleSearch(text?: string) {\r\n    // We use this function to see a substring or string exists in target string.\r\n    function hasWord(target: string, query: string) {\r\n      return target.toLowerCase().indexOf(query.toLowerCase()) > -1;\r\n    }\r\n\r\n    // Guard clause to check if any likes or text\r\n    if (!text && !likes && !tagsParam.length && !ownersParam.length)\r\n      return data;\r\n\r\n    const filterByTags = data.filter(post =>\r\n      post.tags.some(tag => (tagsParam.length ? tagsParam.includes(tag) : data))\r\n    );\r\n\r\n    const filterByOwner = filterByTags.filter(post => {\r\n      const owner = `${post.owner.firstName} ${post.owner.lastName}`;\r\n      return ownersParam.length ? ownersParam.includes(owner) : filterByTags;\r\n    });\r\n\r\n    // 1st filter by likes if likes\r\n    const filterByLikes = filterByOwner.filter(post => {\r\n      return post.likes >= likes;\r\n    });\r\n\r\n    // Guard clause for the search\r\n    if (!text) return filterByLikes;\r\n\r\n    // Filtering happens here by checking the variable type then filter accordingly\r\n    return filterByLikes.filter((post: Posts) =>\r\n      // Depending on what is checked we will search by that parameter\r\n      searchParams.some(param => {\r\n        // Search by Text, check if typeof is string\r\n        if (typeof post[param] === \"string\")\r\n          return hasWord(post[param], text.trim());\r\n        // Search by tags, check if we have an array\r\n        if (Array.isArray(post[param])) {\r\n          return post[param].some(tag => hasWord(tag, text.trim()));\r\n        }\r\n        // Default search by owner, can make this more dynamic\r\n        if (param === \"owner\") {\r\n          return hasWord(\r\n            `${post.owner.firstName} ${post.owner.lastName}`,\r\n            text.trim()\r\n          );\r\n        }\r\n        return false;\r\n      })\r\n    );\r\n  }\r\n\r\n  function clearAll() {\r\n    setTagsParam([]);\r\n    setOwnersParam([]);\r\n    setQuery(\"\");\r\n    setLikes(0);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar>\r\n        <div className=\"filters\">\r\n          <button className=\"clear\" onClick={clearAll}>\r\n            Clear\r\n          </button>\r\n          <input\r\n            className=\"searchbar\"\r\n            type=\"search\"\r\n            value={query}\r\n            placeholder={`Search by ${searchParams.join(\", \")}.`}\r\n            onChange={e => setQuery(e.target.value)}\r\n          />\r\n\r\n          <div className=\"searchmenu\">\r\n            {filters.map(filter => (\r\n              <label key={filter}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={searchParams.includes(filter)}\r\n                  onChange={() => {\r\n                    const check = searchParams.includes(filter);\r\n                    setSearchParams(prev =>\r\n                      check\r\n                        ? prev.filter(param => param !== filter)\r\n                        : [...prev, filter]\r\n                    );\r\n                  }}\r\n                />\r\n                {filter}\r\n              </label>\r\n            ))}\r\n          </div>\r\n\r\n          <Dropmenu\r\n            label=\"owners\"\r\n            params={ownersParam}\r\n            contents={owners}\r\n            setParams={setOwnersParam}\r\n          />\r\n          <Dropmenu\r\n            label=\"tags\"\r\n            params={tagsParam}\r\n            contents={tags}\r\n            setParams={setTagsParam}\r\n          />\r\n        </div>\r\n\r\n        <RangeSlider slider={likes} setSlider={setLikes} />\r\n      </Navbar>\r\n\r\n      <PostInfo data={handleSearch(query)} />\r\n    </div>\r\n  );\r\n}\r\n","export function fetchData(url: string, header: string) {\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n    headers: { \"app-id\": header },\r\n  })\r\n    .then(response => {\r\n      if (response.ok) return response.json();\r\n      throw response;\r\n    })\r\n    .catch(error => console.error(\"Bad request\", error));\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}