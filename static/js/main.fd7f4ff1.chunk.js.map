{"version":3,"sources":["components/Navbar/Navbar.tsx","components/Thumbnail/Thumbnail.tsx","components/PostInfo/PostInfo.tsx","components/RangeSlider/RangeSlider.tsx","components/Dropmenu/Dropmenu.tsx","App.tsx","util/index.ts","index.tsx"],"names":["Navbar","children","id","Thumbnail","thumbnail","className","src","alt","React","memo","PostInfo","data","useState","posts","setPosts","display","setDisplay","loading","setLoading","handleLazy","window","scrollY","innerHeight","pageYOffset","document","documentElement","offsetHeight","useEffect","addEventListener","removeEventListener","slice","prev","length","map","post","index","owner","picture","firstName","lastName","likes","Date","publishDate","toLocaleDateString","tags","text","image","style","onClick","scrollTo","textAlign","Range","slider","setSlider","show","setShow","onBlur","type","name","min","max","value","onInput","e","Number","target","left","Dropmenu","label","params","contents","setParams","content","checked","includes","onChange","check","filter","param","App","setData","query","setQuery","searchParams","setSearchParams","setLikes","setTags","tagsParam","setTagsParam","owners","setOwners","ownersParam","setOwnersParam","url","header","fetch","method","headers","then","response","ok","json","catch","error","console","log","tag","Set","flat","Infinity","autoFocus","placeholder","join","hasWord","toLowerCase","indexOf","filterByTags","some","filterByLikes","trim","Array","isArray","handleSearch","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fd7f4ff1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\ninterface PropTypes {\r\n  children: React.ReactNode;\r\n}\r\nexport default function Navbar({ children }: PropTypes) {\r\n  return <header id=\"header-component\">{children}</header>;\r\n}\r\n","import \"./Thumbnail.css\";\r\nimport React from \"react\";\r\n\r\nfunction Thumbnail({ thumbnail }: { thumbnail: string }) {\r\n  return (\r\n    <div className=\"thumbnail\">\r\n      <img src={thumbnail} alt=\"thumbnail\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Thumbnail);\r\n","import \"./PostInfo.css\";\nimport Thumbnail from \"../Thumbnail/Thumbnail\";\nimport { Posts } from \"../../interface/Posts\";\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\n\nfunction PostInfo({ data }) {\n  const [posts, setPosts] = useState<Posts[]>([]);\n  const [display, setDisplay] = useState(\"none\");\n  const [loading, setLoading] = useState(false);\n\n  // Lazy loading starts here\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleLazy);\n    return () => window.removeEventListener(\"scroll\", handleLazy);\n  }, []);\n\n  useEffect(() => {\n    setPosts(data.slice(0, 10));\n  }, [data]);\n\n  useEffect(() => {\n    if (!loading) return;\n    setPosts(prev => {\n      return [...prev, ...data.slice(prev.length, 10 + prev.length)];\n    });\n    setLoading(false);\n  }, [loading, data]);\n\n  function handleLazy() {\n    !window.scrollY ? setDisplay(\"none\") : setDisplay(\"block\");\n    if (\n      window.innerHeight + window.pageYOffset + 100 <\n      document.documentElement.offsetHeight\n    )\n      return;\n    setLoading(true);\n  }\n\n  // If no posts exist we display no results.\n  if (!posts.length)\n    return <h2 style={{ textAlign: \"center\" }}>No results...</h2>;\n\n  return (\n    <>\n      {posts.map((post: Posts, index: number) => (\n        <div className=\"flex-container\" key={post.id}>\n          <div className=\"post-container\">\n            <div className=\"owner\">\n              <Thumbnail thumbnail={post.owner.picture} />\n              <h2>\n                {post.owner.firstName} {post.owner.lastName}\n              </h2>\n            </div>\n            <div className=\"post-info\">\n              <div className=\"image-subtext\">\n                <span>\n                  <i className=\"bx bxs-like\"></i> {post.likes}\n                </span>\n                <span>\n                  Publish Date:{\" \"}\n                  {new Date(post.publishDate).toLocaleDateString()}\n                </span>\n              </div>\n            </div>\n            {post.tags.length > 0 && (\n              <div className=\"tagbar\">\n                {post.tags.map((tags, index) => (\n                  <p key={index}>{tags}</p>\n                ))}\n              </div>\n            )}\n\n            <p>{post.text}</p>\n          </div>\n          <img className=\"post-image\" src={post.image} alt=\"post\" />\n        </div>\n      ))}\n\n      <div style={{ display }} className=\"scroll-top\">\n        <button onClick={() => window.scrollTo(0, 0)} className=\"top\">\n          <i className=\"bx bxs-chevrons-up\"></i>\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default React.memo(PostInfo);\n","import React, { useState } from \"react\";\nimport \"./RangeSlider.css\";\n\ninterface PropTypes {\n  slider: number;\n  setSlider: (arg0) => void;\n}\n\nfunction Range({ slider, setSlider }: PropTypes) {\n  const [show, setShow] = useState(\"\");\n\n  function handleInput(e: React.ChangeEvent<HTMLInputElement>) {\n    setSlider(Number(e.target.value));\n    setShow(\"show\");\n  }\n\n  return (\n    <div className=\"range-wrap\">\n      Likes\n      <input\n        className=\"range\"\n        onBlur={() => setShow(\"\")}\n        type=\"range\"\n        name=\"likes\"\n        min=\"0\"\n        max=\"500\"\n        value={slider}\n        onInput={handleInput}\n      />\n      <output className={`bubble ${show}`} style={{ left: slider / 5 + \"%\" }}>\n        {slider}\n      </output>\n    </div>\n  );\n}\n\nexport default React.memo(Range);\n","import React from \"react\";\nimport \"./Dropmenu.css\";\n\ninterface PropTypes {\n  label: string;\n  params: string[];\n  contents: string[];\n  setParams: any;\n}\n\nfunction Dropmenu({ label, params, contents, setParams }: PropTypes) {\n  return (\n    <div className={`dropdown ${label}`}>\n      <button className=\"dropbtn\">{label}</button>\n      <div className=\"dropdown-content\">\n        <div className=\"grid-column\">\n          {contents.map(content => (\n            <label key={content}>\n              <input\n                type=\"checkbox\"\n                checked={params.includes(content)}\n                onChange={() => {\n                  const check = params.includes(content);\n                  setParams(prev =>\n                    check\n                      ? prev.filter(param => param !== content)\n                      : [...prev, content]\n                  );\n                }}\n              />\n              {content}\n            </label>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Dropmenu);\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { fetchData } from \"./util\";\nimport { Posts } from \"./interface/Posts\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport PostInfo from \"./components/PostInfo/PostInfo\";\nimport RangeSlider from \"./components/RangeSlider/RangeSlider\";\nimport Dropmenu from \"./components/Dropmenu/Dropmenu\";\n\nexport default function App() {\n  const URL = \"https://dummyapi.io/data/v1/post?limit=50\";\n  const APP_ID = \"614388656e2fec97b56911c0\";\n  const [data, setData] = useState<Posts[]>([]);\n  const [query, setQuery] = useState(\"\");\n  const filters = [\"owner\", \"text\", \"tags\"];\n  const [searchParams, setSearchParams] = useState([\"owner\", \"text\", \"tags\"]);\n  const [likes, setLikes] = useState(0);\n  const [tags, setTags] = useState([]);\n  const [tagsParam, setTagsParam] = useState<string[]>([]);\n  const [owners, setOwners] = useState([]);\n  const [ownersParam, setOwnersParam] = useState<string[]>([]);\n\n  useEffect(() => {\n    fetchData(URL, APP_ID).then(data => {\n      console.log(data.data);\n      setData(data.data);\n      let tags = data.data.map(data => data.tags.map(tag => tag));\n      tags = [...new Set(tags.flat(Infinity))];\n      setTags(tags);\n      let owners = data.data.map(\n        data => `${data.owner.firstName} ${data.owner.lastName}`\n      );\n      owners = [...new Set(owners)];\n      setOwners(owners);\n    });\n  }, []);\n\n  function handleSearch(text?: string) {\n    // We use this function to see a substring or string exists in target string.\n    function hasWord(target: string, query: string) {\n      return target.toLowerCase().indexOf(query.toLowerCase()) > -1;\n    }\n\n    // Guard clause to check if any likes or text\n    if (!text && !likes && !tagsParam.length && !ownersParam.length)\n      return data;\n\n    const filterByTags = data.filter(post =>\n      post.tags.some(tag => (tagsParam.length ? tagsParam.includes(tag) : data))\n    );\n\n    const filterByOwner = filterByTags.filter(post => {\n      const owner = `${post.owner.firstName} ${post.owner.lastName}`;\n      return ownersParam.length ? ownersParam.includes(owner) : filterByTags;\n    });\n\n    // 1st filter by likes if likes\n    const filterByLikes = filterByOwner.filter(post => {\n      return post.likes >= likes;\n    });\n\n    // Guard clause for the search\n    if (!text || !searchParams?.length) return filterByLikes;\n\n    // Filtering happens here by checking the variable type then filter accordingly\n    return filterByLikes.filter((post: Posts) =>\n      // Depending on what is checked we will search by that parameter\n      searchParams.some(param => {\n        // Search by Text, check if typeof is string\n        if (typeof post[param] === \"string\")\n          return hasWord(post[param], text.trim());\n        // Search by tags, check if we have an array\n        if (Array.isArray(post[param])) {\n          return post[param].some(tag => hasWord(tag, text.trim()));\n        }\n        // Default search by owner, can make this more dynamic\n        if (param === \"owner\") {\n          return hasWord(\n            `${post.owner.firstName} ${post.owner.lastName}`,\n            text.trim()\n          );\n        }\n        return false;\n      })\n    );\n  }\n\n  function clearAll() {\n    setTagsParam([]);\n    setOwnersParam([]);\n    setQuery(\"\");\n    setLikes(0);\n  }\n\n  return (\n    <div>\n      <Navbar>\n        <div className=\"filters\">\n          <button className=\"clear\" onClick={clearAll}>\n            clear\n          </button>\n          <input\n            autoFocus\n            className=\"searchbar\"\n            type=\"search\"\n            value={query}\n            placeholder={`Search by ${searchParams.join(\", \")}.`}\n            onChange={e => setQuery(e.target.value)}\n          />\n\n          <div className=\"searchmenu\">\n            {filters.map(filter => (\n              <div key={filter}>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={searchParams.includes(filter)}\n                    onChange={() => {\n                      const check = searchParams.includes(filter);\n                      setSearchParams(prev =>\n                        check\n                          ? prev.filter(param => param !== filter)\n                          : [...prev, filter]\n                      );\n                    }}\n                  />\n                  {filter}\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div>\n          <Dropmenu\n            label=\"owners\"\n            params={ownersParam}\n            contents={owners}\n            setParams={setOwnersParam}\n          />\n          <Dropmenu\n            label=\"tags\"\n            params={tagsParam}\n            contents={tags}\n            setParams={setTagsParam}\n          />\n        </div>\n\n        <RangeSlider slider={likes} setSlider={setLikes} />\n      </Navbar>\n\n      <PostInfo data={handleSearch(query)} />\n    </div>\n  );\n}\n","export function fetchData(url: string, header: string) {\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n    headers: { \"app-id\": header },\r\n  })\r\n    .then(response => {\r\n      if (response.ok) return response.json();\r\n      throw response;\r\n    })\r\n    .catch(error => console.error(\"Bad request\", error));\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}